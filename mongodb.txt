1. Write Mongo query to retrieve the documents from the payments collection with an amount lesser than or equal to 30.\

ANS :  db.payments.aggregate([{$match: {amount: {$lte: 30}}}])


2. Write Mongo query to retrieve orders sorted by order date in ascending order.

Ans :  db.orders.aggregate([{$sort: {order_date: 1}}])


3. Write Mongo query to get the total number of orders count per customer ?

Ans: db.orders.aggregate([{$group: {_id:"$customer_id", count: {$sum: 1}}}])


4. Write Mongo query to find the average total of orders made by customers who live in California(CA).
The answer should be a with a key avgTotal and it's value should Integer not a Float.

Ans: db.orders.aggregate([{ $lookup: { from: "buyers", localField: "customer_id", foreignField: "_id", as: "customer" }},{ $match: { "customer.address.state": "CA" }},{ $group: { _id: null, total: { $avg: "$total" }}},{ $project: { avgTotal: { $trunc: "$total" },_id: 0 }}])


5. Write Mongo query to find Most used payment Method as paymentMethod and the number of time it is used as count.

Ans: db.payments.aggregate([{$group: {_id: "$paymentMethod",   count: { $sum: 1 }}},{$project: {paymentMethod: "$_id",count:1,_id:0}}])

6.Write Mongo query to retrieve the ship_date and order_date of an order whose payment status is pending by payment _id.

Ans: db.orders.aggregate([{ $lookup: { from: "payments", localField: "_id", foreignField: "orderdtl_id", as: "matched_payments" } }, { $unwind: "$matched_payments" }, { $match: { "matched_payments.paymentstatus": "pending" } }, { $project: { ship_date: 1, order_date: 1, _id: 0 } }])

